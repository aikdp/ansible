# #command vs shell uisnbg ansible
# - name:
#   hosts: local
#   connection: local
#   tasks:
#     - name: runn the command
#       ansible.builtin.command: ls -ltr > /tmp/output.txt


# #command vs shell uisnbg ansible
# - name: command vs shell with anible
#   hosts: local
#   connection: local
#   tasks:
#     - name: runn the shell
#       ansible.builtin.shell: ls -ltr > /tmp/output.txt


- name: shell vs command using ansible
  hosts: local
  connection: local
  tasks:
     - name: use shell to run the process
       ansible.builtin.shell: ps -ef | grep ssh
       register: output
      
     - name: use command to run the process
       ansible.builtin.command: ps -ef | grep ssh
       register: output
    
    #Shell is login to server and execute the inside the server, Shell less secure, beacuse it will access and execute cpommand inside servers.
    # where as command module is just issue the command, hence command module is secure

    #example: In PMO office we can enter without permision. hence, here Command module has less access so it is secure.
    #Shell has accessing servers as well, hence less secure

    #Command --> is for simple command. It is not getting the shell environment 

    #Shell--> is for complex like pipes, redirectors, etc. it gets the shell environment 
 